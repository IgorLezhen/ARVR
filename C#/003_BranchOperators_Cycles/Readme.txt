Задание 1. Приложение по определению чётного или нечётного числа

Что нужно сделать
Напишите приложение, которое определяет чётное или нечётное число. Алгоритм приложения выглядит следующим образом:

На экране программа с помощью оператора Console.WriteLine предлагает пользователю ввести целое число.
С помощью оператора Console.ReadLine считывается введённое число.
С помощью метода int.Parse число преобразуется в целочисленную переменную.
С помощью оператора деления с остатком определяется, чётное число или нечётное.
В зависимости от предыдущего шага на экран выводится текст, является ли данное число чётным или нет.

Советы и рекомендации
Оператор деления с остатком на языке C# записывается как %. То есть, если нужно проверить на чётность число N, то данное логическое выражение N % 2 == 0 будет истинно. Если это выражение будет ложно — число нечётное.

-----

Задание 2. Программа подсчёта суммы карт в игре «21»

Что нужно сделать
Есть довольно простая карточная игра, она называется Blackjack. Суть игры сводится к подсчёту карт. Каждая карта имеет свой «вес». Напишите программу, которая подсчитает сумму всех карт у нас на руках. Задача программы сводится к следующему алгоритму:

    1. Программа приветствует пользователя и спрашивает, сколько у него на руках карт.

    2. Пользователь вводит целое число.

    3. Преобразуем это число в счётчик для цикла.

    4. С помощью цикла for итеративно просим пользователя ввести номинал каждой карты. Для карт с числовым номиналом он вводит только цифру. 

Для «картинок» следует принять обозначения латинскими буквами:

Валет = J

Дама = Q

Король = K

Туз = T

    5. Внутри цикла, используя оператор switch, «вес» каждой карты складываем в общую переменную суммы, которая объявлена до тела основного цикла. Для числовых карт их «вес» равен весу, указанному при вводе пользователем. Для «картинок» «вес» равен 10.

    6. По завершении ввода на экране появится значение суммы карт.

Рекомендация
Чтобы суммировать значение в какой-нибудь переменной, можно воспользоваться следующей короткой записью: 

sum = sum + 10;

В рамках данной операции к текущему значению переменной sum прибавится 10. Тем самым мы увеличим значение переменной, а не перепишем в ней значение.  

Что оценивается
Программа выводит на экран информацию о сумме карт на руках у пользователя. 
Программа выводит на экран в текстовом виде информацию о том, что должен сделать пользователь. Например, «Введите номинал следующей карты».

-----

Задание 3. Проверка простого числа

Что нужно сделать
Эта задача — одна из самых распространённых и популярных. 

Простое число — число, которое делится само на себя и на единицу. 

Есть много алгоритмов поиска простых чисел. Реализуйте один из самых лёгких. Проверьте введённое с клавиатуры целое число на признак простоты. 

Чтобы закрепить знания, реализуйте эту задачу, используя цикл while.

Для начала пользователь вводит целое число.
Затем в цикле нужно перебрать все числа, начиная с 1, и до N — 1.
Входное число N при каждой итерации цикла нужно делить на число, которое получается в цикле с остатком. 
Если остаток от деления равен 0, значит, программа нашла делитель этого числа, и потому это число уже не может являться простым числом.
Если остаток от деления равен 0, то следует переменной bool, объявленной за рамками цикла, присвоить значение true.
Если после выхода из цикла значение переменной осталось false, значит, число простое. Если значение переменной стало true — значит, был найден делитель, поэтому число не может считаться простым.

Советы и рекомендации
Посмотрите на оператор деления с остатком в задаче 1.
Для проверки простоты чисел используйте простые числа — 3, 7, 37, 79, 173. 

Что оценивается
Программа выводит на экран, является ли число простым.
Программа не зависает.
